// Development   console.log('üîë Login Credentials (Updated):');
  console.log('  üë®‚Äçüíº ADMIN ACCOUNTS:');
  console.log('    üìß sysadmin@gmail.com | üîí sysadmin123 | üé≠ System Admin');
  console.log('    üìß coordinator@gmail.com | üîí coordinator123 | üé≠ Ticket Coordinator');
  console.log('    üìß superadmin@gmail.com | üîí superadmin123 | üé≠ Super Admin');
  console.log('');
  console.log('  üë§ EMPLOYEE ACCOUNTS:');
  console.log('    üìß john.doe@gmail.com | üîí employee123 | üé≠ Employee');
  console.log('    üìß jane.smith@gmail.com | üîí manager123 | üé≠ Employee');
  console.log('    üìß mike.wilson@gmail.com | üîí analyst123 | üé≠ Employee');
  console.log('');

  // Initialize authentication for seamless development
  initializeLocalAuth();

// Initialize development environment
if (USE_LOCAL_API) {
  console.log('üöÄ Frontend-Only Development Mode Activated!');
  console.log('');
  console.log('üìã Available Features:');
  console.log('  ‚úÖ Local data storage (localStorage)');
  console.log('  ‚úÖ Mock authentication (no passwords required)');
  console.log('  ‚úÖ Bypassed protected routes');
  console.log('  ‚úÖ Sample data pre-loaded');
  console.log('  ‚úÖ No backend dependencies');
  console.log('');
  console.log('üîë Login Credentials:');
  console.log('  üë®‚Äçüíº ADMIN ACCOUNTS:');
  console.log('    üìß sysadmin@company.com | üîí sysadmin123 | üé≠ System Administrator');
  console.log('    üìß coordinator@company.com | üîí coordinator123 | ÔøΩ Ticket Coordinator');
  console.log('    üìß superadmin@company.com | üîí superadmin123 | üé≠ Super Administrator');
  console.log('');
  console.log('  üë§ EMPLOYEE ACCOUNTS:');
  console.log('    üìß john.doe@company.com | üîí employee123 | üé≠ Developer');
  console.log('    üìß jane.smith@company.com | üîí manager123 | üé≠ HR Manager');
  console.log('    üìß mike.wilson@company.com | üîí analyst123 | üé≠ Finance Analyst');
  console.log('');
  console.log('ÔøΩüéÆ Quick Access URLs (Direct Access):');
  console.log('  üì± Employee Dashboard: /employee/home');
  console.log('  üëî Admin Dashboard: /coordinator-admin/dashboard');
  console.log('  üé´ Submit Ticket: /employee/ticket-submission-form');
  console.log('  üìä Ticket Tracker: /employee/ticket-tracker');
  console.log('  ‚öôÔ∏è  Settings: /employee/settings');
  console.log('');
  console.log('üí° Tips:');
  console.log('  - You can access any page directly via URL');
  console.log('  - All data persists in localStorage');
  console.log('  - No login required (authentication bypassed)');
  console.log('  - Use browser dev tools to inspect localStorage');
  console.log('');

  // Initialize authentication for seamless development
  initializeLocalAuth();

  // Add global development helpers
  window.devUtils = {
    clearStorage: () => {
      localStorage.clear();
      console.log('üßπ Local storage cleared. Refresh to reload mock data.');
    },
    
    showCurrentUser: () => {
      console.log('üë§ Current user:', JSON.parse(localStorage.getItem('hdts_current_user') || 'null'));
    },
    
    showAllData: () => {
      console.log('üìä All stored data:');
      console.log('Employees:', JSON.parse(localStorage.getItem('hdts_employees') || '[]'));
      console.log('Tickets:', JSON.parse(localStorage.getItem('hdts_tickets') || '[]'));
      console.log('Rejected Employees:', JSON.parse(localStorage.getItem('hdts_rejected_employees') || '[]'));
    },
    
    switchUser: (userId) => {
      const employees = JSON.parse(localStorage.getItem('hdts_employees') || '[]');
      const admins = JSON.parse(localStorage.getItem('hdts_admins') || '[]');
      const allUsers = [...employees, ...admins];
      const user = allUsers.find(u => u.id === userId);
      
      if (user) {
        localStorage.setItem('hdts_current_user', JSON.stringify(user));
        console.log('üë§ Switched to user:', user);
        window.location.reload();
      } else {
        console.log('‚ùå User not found. Available users:');
        allUsers.forEach(u => console.log(`  ${u.id}: ${u.first_name} ${u.last_name} (${u.role})`));
      }
    },
    
    showCredentials: () => {
      console.log('üîë AVAILABLE LOGIN CREDENTIALS:');
      console.log('');
      console.log('üë®‚Äçüíº ADMIN ACCOUNTS:');
      console.log('‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê');
      console.log('‚îÇ Email                       ‚îÇ Password        ‚îÇ Role                 ‚îÇ');
      console.log('‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§');
      console.log('‚îÇ sysadmin@gmail.com          ‚îÇ sysadmin123     ‚îÇ System Administrator ‚îÇ');
      console.log('‚îÇ coordinator@gmail.com       ‚îÇ coordinator123  ‚îÇ Ticket Coordinator   ‚îÇ');
      console.log('‚îÇ superadmin@gmail.com        ‚îÇ superadmin123   ‚îÇ Super Administrator  ‚îÇ');
      console.log('‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò');
      console.log('');
      console.log('üë§ EMPLOYEE ACCOUNTS:');
      console.log('‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê');
      console.log('‚îÇ Email                       ‚îÇ Password        ‚îÇ Role                 ‚îÇ');
      console.log('‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§');
      console.log('‚îÇ john.doe@gmail.com          ‚îÇ employee123     ‚îÇ Developer            ‚îÇ');
      console.log('‚îÇ jane.smith@gmail.com        ‚îÇ manager123      ‚îÇ HR Manager           ‚îÇ');
      console.log('‚îÇ mike.wilson@gmail.com       ‚îÇ analyst123      ‚îÇ Finance Analyst      ‚îÇ');
      console.log('‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò');
    },
    
    quickLogin: (userType) => {
      const accounts = {
        sysad: { email: 'sysadmin@gmail.com', password: 'sysadmin123' },
        coordinator: { email: 'coordinator@gmail.com', password: 'coordinator123' },
        superadmin: { email: 'superadmin@gmail.com', password: 'superadmin123' },
        employee: { email: 'john.doe@gmail.com', password: 'employee123' },
        manager: { email: 'jane.smith@gmail.com', password: 'manager123' },
        analyst: { email: 'mike.wilson@gmail.com', password: 'analyst123' }
      };
      
      const account = accounts[userType];
      if (account) {
        console.log(`üöÄ Quick login as ${userType}:`, account);
        console.log('Go to login page and use these credentials!');
      } else {
        console.log('‚ùå Invalid user type. Available: sysad, coordinator, superadmin, employee, manager, analyst');
      }
    },

    help: () => {
      console.log('üõ†Ô∏è  Available dev utilities:');
      console.log('  devUtils.showCredentials() - Show all login credentials');
      console.log('  devUtils.quickLogin(type) - Get credentials for quick login');
      console.log('  devUtils.clearStorage() - Clear all local data');
      console.log('  devUtils.showCurrentUser() - Show current user info');
      console.log('  devUtils.showAllData() - Show all stored data');
      console.log('  devUtils.switchUser(id) - Switch to different user');
      console.log('  devUtils.help() - Show this help');
      console.log('');
      console.log('üí° Examples:');
      console.log('  devUtils.quickLogin("sysad") - Get system admin credentials');
      console.log('  devUtils.quickLogin("coordinator") - Get coordinator credentials');
      console.log('  devUtils.quickLogin("employee") - Get employee credentials');
    }
  };

  console.log('üõ†Ô∏è  Type "devUtils.help()" in console for development utilities');
  console.log('');
}
